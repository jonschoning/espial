{
  "version": 3,
  "sources": ["../../src/Component/AccountSettings.purs", "../../src/AccountSettings.purs"],
  "sourcesContent": ["module Component.AccountSettings where\n\nimport Prelude hiding (div)\n\nimport App (editAccountSettings)\nimport Data.Lens (Lens', lens, use, (%=))\nimport Effect.Aff (Aff)\nimport Halogen as H\nimport Halogen.HTML (div, input, text)\nimport Halogen.HTML.Elements (label)\nimport Halogen.HTML.Events (onChecked)\nimport Halogen.HTML.Properties (InputType(..), checked, for, id, name, type_)\nimport Model (AccountSettings)\nimport Util (class_)\nimport Web.Event.Event (Event)\n\ntype UState =\n  { us :: AccountSettings\n  }\n\n_us :: Lens' UState AccountSettings\n_us = lens _.us (_ { us = _ })\n\ndata UAction\n  = UEditField EditField\n  | USubmit Event\n\ndata EditField\n  = EarchiveDefault Boolean\n  | EprivateDefault Boolean\n  | EprivacyLock Boolean\n\n\n-- | The bookmark component definition.\nusetting :: forall q i o. AccountSettings -> H.Component q i o Aff\nusetting u' =\n  H.mkComponent\n    { initialState: const (mkState u')\n    , render\n    , eval: H.mkEval $ H.defaultEval { handleAction = handleAction }\n    }\n  where\n\n  mkState u =\n    { us: u\n    }\n\n  render :: forall m. UState -> H.ComponentHTML UAction () m\n  render { us } =\n    div [ class_ \"settings-form\" ]\n    [ div [ class_ \"fw7 mb2\"] [ text \"Account Settings\" ]\n    , div [ class_ \"flex items-center mb2\" ]\n      [ input [ type_ InputCheckbox , class_ \"pointer mr2\" , id \"archiveDefault\", name \"archiveDefault\"\n              , checked (us.archiveDefault) , onChecked (editField EarchiveDefault) ]\n      , label [ for \"archiveDefault\", class_ \"lh-copy\" ]\n        [ text \"Archive Non-Private Bookmarks (archive.li)\" ]\n      ]\n    , div [ class_ \"flex items-center mb2\" ]\n      [ input [ type_ InputCheckbox , class_ \"pointer mr2\" , id \"privateDefault\", name \"privateDefault\"\n              , checked (us.privateDefault) , onChecked (editField EprivateDefault) ]\n      , label [ for \"privateDefault\", class_ \"lh-copy\"  ]\n        [ text \"Default new bookmarks to Private\" ]\n      ]\n    , div [ class_ \"flex items-center mb2\" ]\n      [ input [ type_ InputCheckbox , class_ \"pointer mr2\" , id \"privacyLock\", name \"privacyLock\"\n              , checked (us.privacyLock) , onChecked (editField EprivacyLock) ]\n      , label [ for \"privacyLock\", class_ \"lh-copy\"  ]\n        [ text \"Privacy Lock (Private Account)\" ]\n      ]\n    ]\n    where\n      editField :: forall a. (a -> EditField) -> a -> UAction\n      editField f = UEditField <<< f\n\n  handleAction :: UAction -> H.HalogenM UState UAction () o Aff Unit\n  handleAction (UEditField f) = do\n    _us %= case f of\n      EarchiveDefault e -> _ { archiveDefault = e }\n      EprivateDefault e -> _ { privateDefault = e }\n      EprivacyLock e -> _ { privacyLock = e }\n    us <- use _us\n    void $ H.liftAff (editAccountSettings us)\n\n  handleAction (USubmit _) = do\n    us <- use _us\n    void $ H.liftAff (editAccountSettings us)\n", "module AccountSettings where\n\nimport Prelude\n\nimport Component.AccountSettings (usetting)\nimport Data.Foldable (traverse_)\nimport Effect (Effect)\nimport Halogen.Aff as HA\nimport Halogen.VDom.Driver (runUI)\nimport Model (AccountSettings)\nimport Web.DOM.ParentNode (QuerySelector(..))\nimport ViewRendered (viewRendered)\n\n\nrenderAccountSettings :: String -> AccountSettings -> Effect Unit\nrenderAccountSettings renderElSelector accountSettings = do\n  HA.runHalogenAff do\n    HA.selectElement (QuerySelector renderElSelector) >>= traverse_ \\el -> do\n      void $ runUI (usetting accountSettings) unit el\n      viewRendered"],
  "mappings": "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",
  "names": ["EarchiveDefault", "EprivateDefault", "EprivacyLock", "UEditField", "USubmit", "_us", "dictStrong", "v", "v1", "strongFn", "strongForget", "usetting", "u$prime", "render", "editField", "f", "$31", "class_", "div", "text", "input", "type_", "InputCheckbox", "id", "name", "checked", "onChecked", "label", "$$for", "mkState", "u", "handleAction", "discard", "modifying", "_us1", "us", "bind", "use", "_us2", "renderAccountSettings", "renderElSelector", "accountSettings", "traverse_", "el"]
}
